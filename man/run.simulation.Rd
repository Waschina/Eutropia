% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.simulation2.R
\name{run.simulation}
\alias{run.simulation}
\title{Run simulation}
\usage{
run.simulation(
  object,
  niter,
  verbose = 1,
  lim_cells = 1e+05,
  lim_time = 300,
  convergence.e = 1e-04,
  record = c("cells", "global_compounds"),
  n.cores = NULL,
  ...
)
}
\arguments{
\item{object}{An object of class \code{growthSimulation}}

\item{niter}{Number of rounds to simulate}

\item{verbose}{Control the 'chattiness' of the simulation logs. 0 - no logs,
1 - only main logs, 2 - chaffinch.}

\item{lim_cells}{Simulation terminates of total number of cells exceed this
value.}

\item{lim_time}{Simulation terminated after the first iteration that finished
after this time limit (in minutes).}

\item{convergence.e}{Numeric indicating when community growth (pg) is
considered to have reached convergence}

\item{record}{Character vector that indicated which simulation variables
should be recorded after each simulation round. See Details.}

\item{n.cores}{Number of CPUs to use for parallelisation. If NULL (default),
it will use the number of detectable cores minus 1 and in maximum 10 cores.}
}
\description{
Run the agent- and FBA-based simulation.
}
\details{
Convergence is checked by calculating the ratio:
\deqn{c := | a / min(a_{i-1},...,a_{i-5}) - 1 |}
\eqn{a_i} is the total biomass at iteration \eqn{i}. The simulation
terminates if \eqn{c} is below `convergence.e`. Thus, one can expect
longer simulations when reducing `convergence.e`.
}
