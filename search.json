[{"path":"https://waschina.github.io/Eutropia/articles/Crossfeeding.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Cross-feeding between two gastrointestinal bacteria","text":"intestinal bacterium Eubacterium rectale known able use acetate energy source anaerobic conditions forms butyrate end product (Rivère et al. (2015) Appl Envrion Microbiol). Acetate common fermentation end product number different intestinal bacteria, including Bifidobacteria (e.g. Bifidobacterium longum). tutorial, co-culture experiment species simulated aerobic environment contains glucose sole source carbon energy. tested acetate cross-feeding occurs organisms affect others population growth.","code":""},{"path":"https://waschina.github.io/Eutropia/articles/Crossfeeding.html","id":"the-setup","dir":"Articles","previous_headings":"","what":"The setup","title":"Cross-feeding between two gastrointestinal bacteria","text":"growth environment, Petri dish-shaped growth area defined radius 80 micro meters. space metabolite concentrations rasterized rhombic dodecahedrons size 1 µm (distance adjacent field centers). chemical growth environment consists 6 field layers height (.e. z-dimension). Next, read models organisms place 15 cells growth environment. required, curiosity initial spatial distribution cells can plotted.  Now simulation object cells. Next add nutrients growth medium.","code":"# create simulation environment sim <- init_simulation(\"Petri_80\",                        gridFieldSize = 1,                        gridFieldLayers = 6) # add organisms (15 cells of each as 'starter culture') models <- list() models[['eure']] <- readRDS(system.file(\"extdata\", \"eure.RDS\",                                         package=\"Eutropia\")) models[['bilo']] <- readRDS(system.file(\"extdata\", \"bilo.RDS\",                                         package=\"Eutropia\"))  sim <- add_organism(sim, model = models[['eure']], name = \"E. rectale\",                     ncells = 15, distribution.radius = 25,                     open.bounds = 1) sim <- add_organism(sim, model = models[['bilo']], name = \"B. longum\",                     ncells = 15, distribution.radius = 25,                     open.bounds = 1) plot_cells(sim,            scalebar.color = \"black\") # Load a medium table dt_medium <- fread(system.file(\"extdata\", \"medium.csv\", package=\"Eutropia\"))  # adding compounds sim <- add_compounds(sim,                      compounds = dt_medium$cpd.id,                      concentrations = dt_medium$mM,                      compound.names = dt_medium$cpd.name,                      is.constant = dt_medium$is.constant)"},{"path":"https://waschina.github.io/Eutropia/articles/Crossfeeding.html","id":"the-simulation","dir":"Articles","previous_headings":"","what":"The simulation","title":"Cross-feeding between two gastrointestinal bacteria","text":"set run first simulation. run either maximum 50 iterations (= 500 minutes simulated time, option niter) maximum 4 minutes 30 seconds (option lim_time). latter case, last iteration allowed finish even time limit exceeded.","code":"sim <- run_simulation(sim, niter = 50, verbose = 1, lim_time = 4.5) #> Initalising simulation using 1 CPU cores. #> LP-solver: glpkAPI #> [00:00:00] Simulation round 1    (30 cells, 8.40 pg dBM) #>            E. rectale(4.49) B. longum(4.44) #> [00:00:05] Simulation round 2    (30 cells, 8.93 pg dBM) #>            E. rectale(4.81) B. longum(4.69) #> [00:00:10] Simulation round 3    (30 cells, 9.49 pg dBM) #>            E. rectale(5.14) B. longum(4.95) #> [00:00:15] Simulation round 4    (30 cells, 10.09 pg dBM) #>            E. rectale(5.47) B. longum(5.21) #> [00:00:20] Simulation round 5    (30 cells, 10.68 pg dBM) #>            E. rectale(5.8) B. longum(5.47) #> [00:00:24] Simulation round 6    (30 cells, 11.28 pg dBM) #>            E. rectale(6.12) B. longum(5.72) #> [00:00:29] Simulation round 7    (30 cells, 11.84 pg dBM) #>            E. rectale(6.43) B. longum(5.95) #> [00:00:34] Simulation round 8    (30 cells, 12.38 pg dBM) #>            E. rectale(6.73) B. longum(6.18) #> [00:00:38] Simulation round 9    (30 cells, 12.91 pg dBM) #>            E. rectale(7.03) B. longum(6.4) #> [00:00:43] Simulation round 10   (30 cells, 13.42 pg dBM) #>            E. rectale(7.32) B. longum(6.61) #> [00:00:48] Simulation round 11   (30 cells, 13.93 pg dBM) #>            E. rectale(7.6) B. longum(6.82) #> [00:00:53] Simulation round 12   (30 cells, 14.42 pg dBM) #>            E. rectale(7.87) B. longum(7.02) #> [00:00:58] Simulation round 13   (32 cells, 14.89 pg dBM) #>            E. rectale(8.17) B. longum(7.22) #> [00:01:02] Simulation round 14   (34 cells, 15.39 pg dBM) #>            E. rectale(8.49) B. longum(7.42) #> [00:01:07] Simulation round 15   (36 cells, 15.90 pg dBM) #>            E. rectale(8.82) B. longum(7.61) #> [00:01:12] Simulation round 16   (41 cells, 16.43 pg dBM) #>            E. rectale(9.17) B. longum(7.82) #> [00:01:18] Simulation round 17   (45 cells, 16.99 pg dBM) #>            E. rectale(9.54) B. longum(8.02) #> [00:01:23] Simulation round 18   (48 cells, 17.56 pg dBM) #>            E. rectale(9.91) B. longum(8.21) #> [00:01:28] Simulation round 19   (50 cells, 18.13 pg dBM) #>            E. rectale(10.28) B. longum(8.41) #> [00:01:33] Simulation round 20   (51 cells, 18.69 pg dBM) #>            E. rectale(10.63) B. longum(8.61) #> [00:01:38] Simulation round 21   (51 cells, 19.24 pg dBM) #>            E. rectale(10.97) B. longum(8.8) #> [00:01:43] Simulation round 22   (51 cells, 19.76 pg dBM) #>            E. rectale(11.29) B. longum(8.98) #> [00:01:48] Simulation round 23   (51 cells, 20.27 pg dBM) #>            E. rectale(11.59) B. longum(9.16) #> [00:01:54] Simulation round 24   (53 cells, 20.76 pg dBM) #>            E. rectale(11.9) B. longum(9.35) #> [00:01:59] Simulation round 25   (56 cells, 21.25 pg dBM) #>            E. rectale(12.2) B. longum(9.54) #> [00:02:05] Simulation round 26   (57 cells, 21.74 pg dBM) #>            E. rectale(12.51) B. longum(9.74) #> [00:02:10] Simulation round 27   (58 cells, 22.24 pg dBM) #>            E. rectale(12.8) B. longum(9.93) #> [00:02:16] Simulation round 28   (59 cells, 22.73 pg dBM) #>            E. rectale(13.07) B. longum(10.13) #> [00:02:22] Simulation round 29   (61 cells, 23.20 pg dBM) #>            E. rectale(13.35) B. longum(10.31) #> [00:02:28] Simulation round 30   (62 cells, 23.66 pg dBM) #>            E. rectale(13.64) B. longum(10.5) #> [00:02:34] Simulation round 31   (63 cells, 24.14 pg dBM) #>            E. rectale(13.94) B. longum(10.68) #> [00:02:40] Simulation round 32   (65 cells, 24.62 pg dBM) #>            E. rectale(14.25) B. longum(10.87) #> [00:02:47] Simulation round 33   (66 cells, 25.11 pg dBM) #>            E. rectale(14.54) B. longum(11.06) #> [00:02:53] Simulation round 34   (67 cells, 25.59 pg dBM) #>            E. rectale(14.83) B. longum(11.24) #> [00:02:59] Simulation round 35   (67 cells, 26.07 pg dBM) #>            E. rectale(15.11) B. longum(11.42) #> [00:03:05] Simulation round 36   (67 cells, 26.53 pg dBM) #>            E. rectale(15.39) B. longum(11.6) #> [00:03:12] Simulation round 37   (68 cells, 26.99 pg dBM) #>            E. rectale(15.69) B. longum(11.79) #> [00:03:18] Simulation round 38   (68 cells, 27.47 pg dBM) #>            E. rectale(15.97) B. longum(11.97) #> [00:03:24] Simulation round 39   (69 cells, 27.94 pg dBM) #>            E. rectale(16.28) B. longum(12.15) #> [00:03:31] Simulation round 40   (69 cells, 28.43 pg dBM) #>            E. rectale(16.57) B. longum(12.33) #> [00:03:37] Simulation round 41   (70 cells, 28.90 pg dBM) #>            E. rectale(16.85) B. longum(12.5) #> [00:03:44] Simulation round 42   (72 cells, 29.36 pg dBM) #>            E. rectale(17.16) B. longum(12.68) #> [00:03:50] Simulation round 43   (74 cells, 29.84 pg dBM) #>            E. rectale(17.47) B. longum(12.87) #> [00:03:57] Simulation round 44   (75 cells, 30.34 pg dBM) #>            E. rectale(17.78) B. longum(13.06) #> [00:04:03] Simulation round 45   (78 cells, 30.85 pg dBM) #>            E. rectale(18.12) B. longum(13.25) #> [00:04:10] Simulation round 46   (79 cells, 31.36 pg dBM) #>            E. rectale(18.44) B. longum(13.43) #> [00:04:17] Simulation round 47   (83 cells, 31.87 pg dBM) #>            E. rectale(18.81) B. longum(13.6) #> [00:04:24] Simulation round 48   (84 cells, 32.41 pg dBM) #>            E. rectale(19.16) B. longum(13.78)"},{"path":"https://waschina.github.io/Eutropia/articles/Crossfeeding.html","id":"analyse-the-environment-after-the-simulation","dir":"Articles","previous_headings":"","what":"Analyse the environment after the simulation","title":"Cross-feeding between two gastrointestinal bacteria","text":"package comes number functions plot simulation results.      consumed produced metabolites (.e. exchanges) can retrieved simulation. addition, information can retrieved earlier iterations simulation. results clearly show acetate produced B. longum consumed E. rectale.","code":"# Plot spatial distribution of cells plot_cells(sim, scalebar.color = \"black\") # Spatial distribution of glucose plot_environment(sim, compounds = c(\"cpd00027_e0\"),                  scalebar.color = \"black\") # Spatial distribution of acetate, lactate and butyrate plot_environment(sim,                  compounds = c(\"cpd00029_e0\",\"cpd00211_e0\",\"cpd00159_e0\"),                  scalebar.color = \"black\") # growth curves (total cell mass by species) plot_growth(sim) # dynamics in metabolite concentrations (calculated by total environment volume) plot_compounds(sim, compounds = c(\"cpd00029_e0\",\"cpd00211_e0\",\"cpd00159_e0\")) summary_exchanges(sim) #>           type    compound     compound.name          fmol #>  1: E. rectale cpd00001_e0             Water  1.694537e+01 #>  2: E. rectale cpd00009_e0         Phosphate -4.924003e-01 #>  3: E. rectale cpd00027_e0         D-Glucose -8.004018e+00 #>  4: E. rectale cpd00034_e0              Zn2+ -2.677146e-03 #>  5: E. rectale cpd00048_e0           Sulfate -2.677146e-03 #>  6: E. rectale cpd00149_e0              Co2+ -2.677146e-03 #>  7: E. rectale cpd10516_e0              Fe3+ -2.677146e-03 #>  8: E. rectale cpd00067_e0                H+  5.201567e+00 #>  9: E. rectale cpd00063_e0              Ca2+ -2.677146e-03 #> 10: E. rectale cpd00058_e0              Cu2+ -2.677146e-03 #> 11: E. rectale cpd10515_e0              Fe2+ -6.468802e-03 #> 12: E. rectale cpd00205_e0                K+ -2.677146e-03 #> 13: E. rectale cpd00099_e0               Cl- -2.677146e-03 #> 14: E. rectale cpd00013_e0          Ammonium -3.148585e+00 #> 15: E. rectale cpd00011_e0               CO2  9.985142e+00 #> 16: E. rectale cpd00029_e0           Acetate -5.075933e+00 #> 17: E. rectale cpd00363_e0           Ethanol  1.110069e+00 #> 18: E. rectale cpd00239_e0               H2S -8.207552e-02 #> 19: E. rectale cpd00211_e0          Butyrate  7.829385e+00 #> 20: E. rectale cpd00030_e0              Mn2+ -2.677146e-03 #> 21: E. rectale cpd00254_e0              Mg2+ -2.677146e-03 #> 22: E. rectale cpd00971_e0            Sodium  8.339615e-13 #> 23: E. rectale cpd00055_e0      Formaldehyde  3.854496e-17 #> 24: E. rectale cpd00281_e0              GABA -5.462324e-14 #> 25:  B. longum cpd00001_e0             Water  4.424952e+00 #> 26:  B. longum cpd00009_e0         Phosphate -2.376794e-01 #> 27:  B. longum cpd00030_e0              Mn2+ -1.292246e-03 #> 28:  B. longum cpd00048_e0           Sulfate -1.292246e-03 #> 29:  B. longum cpd00149_e0              Co2+ -1.292246e-03 #> 30:  B. longum cpd00067_e0                H+  1.157393e+01 #> 31:  B. longum cpd00027_e0         D-Glucose -5.235496e+00 #> 32:  B. longum cpd00013_e0          Ammonium -1.533534e+00 #> 33:  B. longum cpd00063_e0              Ca2+ -1.292246e-03 #> 34:  B. longum cpd00058_e0              Cu2+ -1.292246e-03 #> 35:  B. longum cpd00205_e0                K+ -1.292246e-03 #> 36:  B. longum cpd00159_e0         L-Lactate  3.050734e+00 #> 37:  B. longum cpd00254_e0              Mg2+ -1.292246e-03 #> 38:  B. longum cpd00011_e0               CO2  4.992585e-01 #> 39:  B. longum cpd00029_e0           Acetate  7.327780e+00 #> 40:  B. longum cpd00363_e0           Ethanol  2.456880e-14 #> 41:  B. longum cpd00239_e0               H2S -3.961748e-02 #> 42:  B. longum cpd00034_e0              Zn2+ -1.292246e-03 #> 43:  B. longum cpd00099_e0               Cl- -1.292246e-03 #> 44:  B. longum cpd10515_e0              Fe2+ -3.122461e-03 #> 45:  B. longum cpd10516_e0              Fe3+ -1.292246e-03 #> 46:  B. longum cpd00229_e0    Glycolaldehyde  2.745323e-03 #> 47:  B. longum cpd03091_e0 5'-Deoxyadenosine  2.745323e-03 #> 48:  B. longum cpd00211_e0          Butyrate -3.885347e-16 #>           type    compound     compound.name          fmol summary_exchanges(sim, iter = 10) #>           type    compound     compound.name          fmol #>  1: E. rectale cpd00001_e0             Water  1.309880e+01 #>  2: E. rectale cpd00009_e0         Phosphate -3.978440e-01 #>  3: E. rectale cpd00027_e0         D-Glucose -6.715340e+00 #>  4: E. rectale cpd00034_e0              Zn2+ -2.163050e-03 #>  5: E. rectale cpd00048_e0           Sulfate -2.163050e-03 #>  6: E. rectale cpd00149_e0              Co2+ -2.163050e-03 #>  7: E. rectale cpd10516_e0              Fe3+ -2.163050e-03 #>  8: E. rectale cpd00067_e0                H+  5.291917e+00 #>  9: E. rectale cpd00971_e0            Sodium -1.232752e-14 #> 10: E. rectale cpd00063_e0              Ca2+ -2.163050e-03 #> 11: E. rectale cpd00058_e0              Cu2+ -2.163050e-03 #> 12: E. rectale cpd10515_e0              Fe2+ -5.226589e-03 #> 13: E. rectale cpd00205_e0                K+ -2.163050e-03 #> 14: E. rectale cpd00099_e0               Cl- -2.163050e-03 #> 15: E. rectale cpd00013_e0          Ammonium -2.543958e+00 #> 16: E. rectale cpd00011_e0               CO2  7.838228e+00 #> 17: E. rectale cpd00029_e0           Acetate -2.419456e+00 #> 18: E. rectale cpd00363_e0           Ethanol  1.259972e+00 #> 19: E. rectale cpd00239_e0               H2S -6.631444e-02 #> 20: E. rectale cpd00211_e0          Butyrate  5.733372e+00 #> 21: E. rectale cpd00030_e0              Mn2+ -2.163050e-03 #> 22: E. rectale cpd00254_e0              Mg2+ -2.163050e-03 #> 23:  B. longum cpd00001_e0             Water  5.514687e+00 #> 24:  B. longum cpd00009_e0         Phosphate -2.962128e-01 #> 25:  B. longum cpd00030_e0              Mn2+ -1.610488e-03 #> 26:  B. longum cpd00048_e0           Sulfate -1.610488e-03 #> 27:  B. longum cpd00149_e0              Co2+ -1.610488e-03 #> 28:  B. longum cpd00067_e0                H+  1.442425e+01 #> 29:  B. longum cpd00027_e0         D-Glucose -6.524844e+00 #> 30:  B. longum cpd00013_e0          Ammonium -1.911199e+00 #> 31:  B. longum cpd00063_e0              Ca2+ -1.610488e-03 #> 32:  B. longum cpd00058_e0              Cu2+ -1.610488e-03 #> 33:  B. longum cpd00205_e0                K+ -1.610488e-03 #> 34:  B. longum cpd00159_e0         L-Lactate  3.802040e+00 #> 35:  B. longum cpd00211_e0          Butyrate  2.951724e-15 #> 36:  B. longum cpd00254_e0              Mg2+ -1.610488e-03 #> 37:  B. longum cpd00011_e0               CO2  6.222112e-01 #> 38:  B. longum cpd00029_e0           Acetate  9.132395e+00 #> 39:  B. longum cpd00363_e0           Ethanol  4.948805e-14 #> 40:  B. longum cpd00239_e0               H2S -4.937410e-02 #> 41:  B. longum cpd00034_e0              Zn2+ -1.610488e-03 #> 42:  B. longum cpd00099_e0               Cl- -1.610488e-03 #> 43:  B. longum cpd10515_e0              Fe2+ -3.891431e-03 #> 44:  B. longum cpd10516_e0              Fe3+ -1.610488e-03 #> 45:  B. longum cpd00229_e0    Glycolaldehyde  3.421414e-03 #> 46:  B. longum cpd03091_e0 5'-Deoxyadenosine  3.421414e-03 #>           type    compound     compound.name          fmol"},{"path":"https://waschina.github.io/Eutropia/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Silvio Waschina. Maintainer.","code":""},{"path":"https://waschina.github.io/Eutropia/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Waschina S (2022). Eutropia: Agent-based modelling microbial communities time continuous µ-meter-scale space. R package version 0.1.7, https://waschina.github.io/Eutropia.","code":"@Manual{,   title = {Eutropia: Agent-based modelling of microbial communities in time and continuous µ-meter-scale space},   author = {Silvio Waschina},   year = {2022},   note = {R package version 0.1.7},   url = {https://waschina.github.io/Eutropia}, }"},{"path":"https://waschina.github.io/Eutropia/index.html","id":"eutropia","dir":"","previous_headings":"","what":"Agent-based modelling of microbial communities in time and continuous µ-meter-scale space","title":"Agent-based modelling of microbial communities in time and continuous µ-meter-scale space","text":"Agent-based metabolic modelling microbial communities time continuous µ-meter-scale space","code":""},{"path":"https://waschina.github.io/Eutropia/index.html","id":"what-is-eutropia","dir":"","previous_headings":"","what":"What is Eutropia","title":"Agent-based modelling of microbial communities in time and continuous µ-meter-scale space","text":"Eutropia R-package cell agent-based metabolic modelling microbial communities. allows dynamic simulations two-dimensional surface-attached cell communities. features Eutropia, might find interesting: Complex polygons (also non-convex) growth environment Extracellular enzymes Nutrient regimes Chemotaxis (attracting repelling) Direct calculations community assortment segragation (see e.g. Yanni et al. (2015) Current Biology)","code":""},{"path":"https://waschina.github.io/Eutropia/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Agent-based modelling of microbial communities in time and continuous µ-meter-scale space","text":"Eutropia development phase. current development version can installed using: installed devtools yet, just uncomment first line. addition, recommend install also development version dependency particles, Eutropia uses physics engine (e.g. cell collision).","code":"# install.packages(\"devtools\") devtools::install_github(\"Waschina/Eutropia\") devtools::install_github(\"thomasp85/particles\")"},{"path":"https://waschina.github.io/Eutropia/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Agent-based modelling of microbial communities in time and continuous µ-meter-scale space","text":"example simulation, please look package’s vignette.","code":""},{"path":"https://waschina.github.io/Eutropia/index.html","id":"some-tricks-to-increase-performance","dir":"","previous_headings":"","what":"Some tricks to increase performance","title":"Agent-based modelling of microbial communities in time and continuous µ-meter-scale space","text":"individual Flux-Balance-Analysis steps, Eutropia requires LP-solver. Ideally, GLPK (GNU Linear Programming Kit) together R-interface-package glpkAPI work. like speed simulations, consider installing IBM’s ILOG CPLEX Optimization Studio along R-interface-package cplexAPI. academia, make sure check IBM’s academic initiative. Installing R-package cplexAPI can sometimes bit tricky, ’d suggest get latest version following install instructions.","code":""},{"path":"https://waschina.github.io/Eutropia/index.html","id":"a-big-thank-you-","dir":"","previous_headings":"","what":"A big Thank You 💐","title":"Agent-based modelling of microbial communities in time and continuous µ-meter-scale space","text":"developers maintainers sybil-universe (sybil, glpkAPI, cplexAPI, sybilSBML). R better place packages. use Eutropia, please make sure give credits sybil citing: Gelius-Dietrich, G., Desouki, .., Fritzemeier, C.J., Lercher, M.J. sybil – Efficient constraint-based modelling R. BMC Syst Biol 7, 125 (2013). https://doi.org/10.1186/1752-0509-7-125 everyone behind GLPK (GNU Linear Programming Kit)","code":""},{"path":"https://waschina.github.io/Eutropia/reference/Exoenzyme-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure of the S4 class ","title":"Structure of the S4 class ","text":"Structure S4 class \"Exoenzyme\"","code":""},{"path":"https://waschina.github.io/Eutropia/reference/Exoenzyme-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Structure of the S4 class ","text":"id Character exoenzyme ID name Characer exoenzyme name D Numeric enzymes' diffusion coefficients. Unit: \\(\\mu\\)m^2 per sec lambda Numeric enzyme's decay constants. Unit: per hr Kcat Numeric turnover rate (kcat) MM-kinetics. Unit: 1/s Km Numeric Km MM-kinetics. Unit: mM mets Character vector metabolite IDs compounds reaction. Main substrate first element. stoich Numeric vector stoichiometries `mets` exoenzyme's reaction.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/Organism-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure of the S4 class ","title":"Structure of the S4 class ","text":"Structure S4 class \"Organism\"","code":""},{"path":"https://waschina.github.io/Eutropia/reference/Organism-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Structure of the S4 class ","text":"cellDiameter Numeric initial Diameter cell spheres \\(\\mu\\)m cellMassInit Numeric initial cell mass pg cellMassAtDivision Limit cell's mass divided two daughter cells. Unit: pg cellShape Character cell shape type. Currently, coccus/sphere shapes supported. vmax Numeric maximum speed cell can move \\(\\mu\\)m/s scavengeDist Numeric indicating maximum distance (cell surface) cell can scavenge nutrients surrounding. Unit: \\(\\mu\\)m chemotaxisCompound Character vector compound IDs influence cells chemotaxis behavior. chemotaxisStrength Numeric vector indicates strength chemotaxis. Positive value attraction; Negative repelling effect. value 1 indicates case maximum gradient (concentration-weighted center cell's scavenge area edge area) cell moves maximum speed (vmax) direction gradient. chemotaxisHillKA Numeric vector K_A value Hill equation chemotactic metabolite sensing. Unit: mM chemotaxisHillCoef Numeric vector Hill coefficient. Unitless mod Object S4-class modelorg organisms metabolic network model. exoenzymes Character vector IDs organism's exoenzymes exoenzymes.prod Numeric vector production rates exoenzymes. Unit: nmol / gDW / hr (nmol Enzyme per gDW cells per hr) color Color organism visualizations.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_compounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add compounds to the growth environment — add_compounds","title":"Add compounds to the growth environment — add_compounds","text":"function can used add substances growth environment providing concentrations mM.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_compounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add compounds to the growth environment — add_compounds","text":"","code":"add_compounds(   object,   compounds,   concentrations,   compound.names = NULL,   is.constant = NULL,   compound.D = NULL )"},{"path":"https://waschina.github.io/Eutropia/reference/add_compounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add compounds to the growth environment — add_compounds","text":"object S4-object type growthSimulation. compounds Character vector compound IDs substances add environment. Compound IDs correspond models' exchange reactions IDs (\"EX_[cpdid]\"), without \"EX_\" prefix. concentrations Numeric vector concentrations compounds `compounds` order. Values mM. compound.names Character vector compound names. .constant Logical vector indicates compound remain constant time despite potential uptake production cells. compound.D Numeric vector compounds' diffusion coefficients \\(\\mu\\)m^2/s. Default: 75","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_compounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add compounds to the growth environment — add_compounds","text":"Return S4-object type growthSimulation.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_compounds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add compounds to the growth environment — add_compounds","text":"Compound concentration equally distributed across whole growth environment. compound already present, old new concentrations added. options planned. compound names provided, current names kept (compound already present) compound ID also used name (case compound new).","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_compounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add compounds to the growth environment — add_compounds","text":"","code":"sim <- init_simulation(cbind(c(-100, -100, 100, 100), c(-100, 100, 100, -100)),                        gridFieldSize = 2, gridFieldLayers = 3)  sim <- add_compounds(sim,                      compounds = c(\"cpd00027_e0\",\"cpd00029_e0\",\"cpd00047_e0\",                                    \"cpd00159_e0\",\"cpd00211_e0\"),                      concentrations = c(50,0,0,0,0),                      compound.names = c(\"D-Glucose\",\"Acetate\",\"Formate\",                                         \"L-Lactate\",\"Butyrate\"),                      is.constant = rep(FALSE, 5))"},{"path":"https://waschina.github.io/Eutropia/reference/add_exoenzyme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an exoenzyme to organism and simulation — add_exoenzyme","title":"Add an exoenzyme to organism and simulation — add_exoenzyme","text":"Adds new exoenzyme simulation links specific organism.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_exoenzyme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an exoenzyme to organism and simulation — add_exoenzyme","text":"","code":"add_exoenzyme(   object,   organism,   id,   mets,   stoich,   production.rate = 0.01,   name = NULL,   D = 10,   lambda = 0.4,   Kcat = 10000,   Km = 100,   init.conc = 0 )"},{"path":"https://waschina.github.io/Eutropia/reference/add_exoenzyme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an exoenzyme to organism and simulation — add_exoenzyme","text":"object S4-object type growthSimulation organism Character indicating name organism, exoenzyme production linked id Character defining ID used specific exoenzyme mets Character vector compound IDs participate reaction catalyzed exoenzyme. stoich Numeric vector length order `mets` specifying stoichiometries compounds. First entry (substrate's coefficient) -1. production.rate Numeric indicating production rate enzyme organism. Unit: nmol enzyme catalytic centers per gDW cells per hr. Default: 0.01 name Character optional name enzyme. D Diffusion coefficient enzyme. Unit \\(\\mu\\)m^2/s. Default: 10 lambda Numeric indicating decay rate enzyme. Unit: per hour. Default: 0.4 . enzyme's half life can calculated ln(2)/lambda Kcat Numeric enzyme's turnover rate. Unit: 1/s . Default: 10000 Km Numeric Menten-Michaelis Km value. Unit: mM . Default: 100 init.conc Numeric indicating initial concentration enzyme growth environment. Unit: nM . Default: 0","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_exoenzyme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an exoenzyme to organism and simulation — add_exoenzyme","text":"Exoenzymes can differ markedly kinetic parameters. defaults provided represent typical enzymes, chosen based data inveratases (EC 3.2.1.26) Zymomonas mobilis. Kcat (~10000 s^-1) Km (100 mM) obtained https://www.brenda-enzymes.org/enzyme.php?ecno=3.2.1.26&Suchword=&reference=&UniProtAcc=&organism","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_organism.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a model/organism to simulation — add_organism","title":"Add a model/organism to simulation — add_organism","text":"Adds organism genome-scale metabolic network model growth simulation object.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_organism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a model/organism to simulation — add_organism","text":"","code":"add_organism(   object,   model,   name,   ncells,   coords = NULL,   distribution.method = \"random_centroid\",   distribution.center = NULL,   distribution.radius = NULL,   cellDiameter = (3 * 1/(4 * pi))^(1/3) * 2,   cellMassInit = 0.28,   cellMassAtDivision = 0.56,   cellShape = \"coccus\",   vmax = 11,   scavengeDist = cellDiameter * 2.5,   rm.deadends = T,   chemotaxisCompound = NULL,   chemotaxisStrength = 0.01,   chemotaxisHillKA = 0.1,   chemotaxisHillCoef = 1.2,   open.bounds = NULL,   color = NULL )"},{"path":"https://waschina.github.io/Eutropia/reference/add_organism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a model/organism to simulation — add_organism","text":"object S4-object type growthSimulation. model organisms metabolic model S4-type modelorg name Character name model, also used plotting. ncells integer. Number initial cells added growth simulation. coords (optional) two column numerical matrix specifying coordinates (1st column x, 2nd column y) initial cells. provided, number rows equal ncells. Default: NULL distribution.method `coords` `NULL`, parameter specifies distribution method initial cells. Default: \"random_centroid\" distribution.center Numeric vector length 2, specifies coordinates centre `distribution.method`. distribution.radius double. Spcifies radius (\\(\\mu\\)m) initial cells distributed. cellDiameter double. Diameter \\(\\mu\\)m initial cells. cellMassInit double. Mass pg initial cells. Default 0.28 pg cellMassAtDivision double. Cell mass cell divides two daughter cells. Default: 0.56 pg cellShape character. Shape cells. Currently \"coccus\" supported. vmax double. Maximum velocity cell \\(\\mu\\)m per second. scavengeDist double. Distance \\(\\mu\\)m cell can scavenge nutrients surrounding/microoenvironment. rm.deadends TRUE, dead-end metabolites reactions removed `model`, reduces computation time FBA, otherwise effect flux distribution solutions. chemotaxisCompound Character vector compound IDs, signals directed movement organism. chemotaxisStrength Numeric vector indicates strength chemotaxis. Positive value attraction; Negative repelling effect. value 1 indicates case maximum gradient (concentration-weighted center cell's scavenge area edge area) cell moves maximum speed (vmax) direction gradient. Default: 0.01 chemotaxisHillKA Numeric vector K_A value (unit: mM) Hill equation chemotactic metabolite sensing. Default: 0.1 mM chemotaxisHillCoef Numeric vector Hill coefficient (unitless) metabolite sensing. Default: 1.2 open.bounds Numeric value used reset lower bounds exchange reactions, current lower bound 0. See Details. color Color organism visualizations.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_organism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a model/organism to simulation — add_organism","text":"Object class growthSimulation.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_organism.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a model/organism to simulation — add_organism","text":"Genome-scale metabolic models usually come pre-constraint, means lower bounds exchange reactions (= max. uptake rates) set represent, , () specific growth environment (b) physiological limit nutrient uptake. Yet, lower bounds value 0 might also utilizable organism compound present environment. option `open.bounds` used, 0-lower bounds replaced new lower bound enable potential uptake agent-based simulation. Please note value convention negative; however package changes value negative counterpart positive value provided. default cell diameter (\\((3 * 1 / (4 * pi))^(1/3) * 2\\)) sphere 1 \\(\\mu\\)m^3 volume. 'chemotaxisHillKA' 'chemotaxisHillCoef' metabolite sensing sensitivity parameters, modeled Hill equation. Default values correspond numbers estimated Sourjik Berg (2001, PNAS) Escherichia coli.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_organism.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add a model/organism to simulation — add_organism","text":"https://bionumbers.hms.harvard.edu/bionumber.aspx?id=100008 http://book.bionumbers.org/-big---e-coli-cell-----mass/ https://bionumbers.hms.harvard.edu/bionumber.aspx?id=115616&ver=0&trm=speed+e.+coli&org=   Victor Sourjik Howard C. Berg. (2001). Receptor sensitivity bacterial  chemotaxis. PNAS 99, 123-127.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/add_organism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a model/organism to simulation — add_organism","text":"","code":"# add two bacterial models (Eubacterium rectale, Bifidobacterium longum) # to the environment; each with 15 initial cells models <- list() models[['eure']] <- readRDS(system.file(\"extdata\", \"eure.RDS\",                             package=\"Eutropia\")) models[['bilo']] <- readRDS(system.file(\"extdata\", \"bilo.RDS\",                             package=\"Eutropia\"))  sim <- init_simulation(cbind(c(-100, -100, 100, 100),                              c(-100, 100, 100, -100)),                        gridFieldSize = 1.75, gridFieldLayers = 3)  sim <- add_organism(sim, model = models[[\"eure\"]], name = \"E. rectale\",                     ncells = 15, distribution.radius = 30) sim <- add_organism(sim, model = models[[\"bilo\"]], name = \"B. longum\",                     ncells = 15, distribution.radius = 30)  plot_cells(sim, xlim = c(-50,50), ylim= c(-50,50))"},{"path":"https://waschina.github.io/Eutropia/reference/calc_assortment.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate spatial segregation and assortment — calc_assortment","title":"Calculate spatial segregation and assortment — calc_assortment","text":"functions calculates cell-wise mean cell type segration assortment values suggested Yanni et al. (2019) Current Biology.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/calc_assortment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate spatial segregation and assortment — calc_assortment","text":"","code":"calc_assortment(object, r = 5, iter = NULL, n_simulations = 10)"},{"path":"https://waschina.github.io/Eutropia/reference/calc_assortment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate spatial segregation and assortment — calc_assortment","text":"object S4-object type growthSimulation. r Numeric. Maximum distance cells considered neighbour. Refers surface--surface distance cells. Unit: \\(\\mu\\)m. iter Positive integer number simulation step/iteration cell assortment calculated. NULL, current distribution displayed. n_simulations positive integer, specifying number permutations used estimate expected assortment cell types distributed randomly.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/calc_assortment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate spatial segregation and assortment — calc_assortment","text":"list three elements: 'cells' data table cell-wise calculated segregation assortment values. 'summary_observed' summary (mean sd) observed segregation assortment cell types. 'summary_expected' summary expected segregation assortment cell types reassigned randomly cells environment maintaining cell positions community-wide cell type counts.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/calc_assortment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate spatial segregation and assortment — calc_assortment","text":"Cell segregation assortment calculated suggested Yanni et al. (2019) Current Biology.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/dilute_compounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Dilute compounds — dilute_compounds","title":"Dilute compounds — dilute_compounds","text":"Dilutes selected compounds given dilution factor.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/dilute_compounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dilute compounds — dilute_compounds","text":"","code":"dilute_compounds(   object,   dilution.factor,   compounds = NULL,   incl.constant = FALSE )"},{"path":"https://waschina.github.io/Eutropia/reference/dilute_compounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dilute compounds — dilute_compounds","text":"object growthSimulation object dilution.factor Numeric within range [0,1], compound concentrations diluted. `1` completely dilutes concentrations 0 mM, `0` change anything. compounds Character compound IDs diluted. `NULL`, compounds diluted. incl.constant Logical specifying whether also constant compounds diluted. Default: FALSE","code":""},{"path":"https://waschina.github.io/Eutropia/reference/growthEnvironment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure of the S4 class ","title":"Structure of the S4 class ","text":"Structure S4 class \"growthEnvironment\"","code":""},{"path":"https://waschina.github.io/Eutropia/reference/growthEnvironment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Structure of the S4 class ","text":"field.pts Object class 'XYZ'. Coordinates rhombic dodecahedron centroids. compounds Character vector compound IDs compound.names Character vector compound names compound.D Numeric vector diffusion coefficient values compound. Unit: \\(\\mu\\)m^2/s concentrations (n x m) numeric matrix n columns representing compounds m grid field (field.pts). Units matrix entries: mM conc.isConstant Logical vector indicating respective compound fixed (.e. buffered) concentration. fieldLayers Integer specifying many layers (z-dimension) rhomic dodecahedra fields environment representation. nfields Integer indicating number fields environment representation. fieldSize Size rhomic dodecahedron \\(\\mu\\)m distance opposite faces. fieldVol Volume field. Unit: \\(\\mu\\)m^3 mat.two column numeric matrix representation grid environment directed graph. First column () second column () denoting field's indices `field.pts` mat.two column matrix. First column: indices field `field.pts`; second column: Number neighboring fields exoenzymes list Exoenzyme S4 objects. exoenzymes.conc `concentrations`, exoenzymes nM.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/growthSimulation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure of the S4 class ","title":"Structure of the S4 class ","text":"Structure S4 class growthSimulation framework growth environment container agent-based flux balance analysis.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/growthSimulation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Structure of the S4 class ","text":"n_rounds integer number simulation rounds already performed growthSimulation object. deltaTime double length time step simulation hours. rMotion double. Maximum x- y distance cell can travel means random movement per simulation round. Unit: \\(\\mu\\)m per minute. models List Organism objects represent different strains simulation. history list recordings simulation status information simulation round. cellDT Data table individual cell information (e.g. size, position, velocity, type) universePolygon Matrix specifying corners polygon defines growth environment boundaries. 2-dimensional: x y. environ Object S4-class growthEnvironment, specifies environment mesh layout, compounds, concentrations. recordDir Directory name, intermediate compound concentrations recorded turned run_simulation. Files directory meant internal resource direct analysis outside package. rcdt data.table stores last reduced cost values cell's exchange reactions. information indicate growth limiting compounds.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/init_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a growth simulation. — init_simulation","title":"Initialize a growth simulation. — init_simulation","text":"Method initialize growthSimulation object","code":""},{"path":"https://waschina.github.io/Eutropia/reference/init_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a growth simulation. — init_simulation","text":"","code":"init_simulation(   universePolygon,   gridFieldSize = 1,   gridFieldLayers = 3,   deltaTime = 1/6,   rMotion = 0.1 )"},{"path":"https://waschina.github.io/Eutropia/reference/init_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a growth simulation. — init_simulation","text":"universePolygon two column matrix specifying x y coordinates polygon corners, describe growth environment boundaries. Alternatively, character indicating one polygon presets can provided (see details). gridFieldSize double. Distance neighboring environments 3D mesh field elements (rhombic dodecahedrons) \\(\\mu\\)m. gridFieldLayers integer. z-dimension (height) number layers field elements. deltaTime double specifying length time step simulation hours. rMotion double. Maximum distance cell can travel means Brownian motion \\(\\mu\\) per minute. Default: 0.1 \\(\\mu\\)m","code":""},{"path":"https://waschina.github.io/Eutropia/reference/init_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a growth simulation. — init_simulation","text":"Object class growthSimulation.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/init_simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize a growth simulation. — init_simulation","text":"Available universe polygon presets: \"Petri_<R>\" Petri dish-like object (actually 99-corner polygon),   `<R>` replaced integer, indicating radius   dish \\(\\mu\\)m. \"Rectangle_<X>_<Y>\" , *surprise*, rectangle. `<X>` `<Y>`   integers specifying width height \\(\\mu\\)m, respectively. \"Kiel_<L>\" let microbes thrive within Kiel's city limits. Use `<L>`   specify latitude dimension \\(\\mu\\)m (integer). longitude automatically   scaled accordingly.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/init_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a growth simulation. — init_simulation","text":"","code":"# Construction a square environment of dimensions 100\\eqn{\\mu}m x 120\\eqn{\\mu}m x 3\\eqn{\\mu}m sim <- init_simulation(cbind(c(-50, -50, 50, 50),                              c(-60, 60, 60, -60)),                        gridFieldSize = 1, gridFieldLayers = 3) sim <- init_simulation(\"rectangle_100_120\", gridFieldSize = 1,                        gridFieldLayers = 3)  # Construct a Petri dish-like simulation environment (radius: 75 \\eqn{\\mu}m) sim <- init_simulation(\"Petri_75\", gridFieldSize = 1,                        gridFieldLayers = 3)"},{"path":"https://waschina.github.io/Eutropia/reference/plot_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial distribution of cells — plot_cells","title":"Plot spatial distribution of cells — plot_cells","text":"Plots distribution cells growth simulation.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial distribution of cells — plot_cells","text":"","code":"plot_cells(   object,   xlim = NULL,   ylim = NULL,   iter = NULL,   scalebar.color = \"white\",   background.color = \"black\",   incl.timestamp = TRUE,   legend.position = \"bottom\",   plot.title = NULL )"},{"path":"https://waschina.github.io/Eutropia/reference/plot_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial distribution of cells — plot_cells","text":"object S4-object type growthSimulation. xlim Numeric vector length 2, specifying x-range displayed. ylim Numeric vector length 2, specifying y-range displayed. iter Positive integer number simulation step/iteration plot cell distribution. NULL, current distribution displayed. scalebar.color Color scale bar annotation. Default: \"white\". background.color Color growth environment background. incl.timestamp Boolean indicating whether time stamp included plot. Default: TRUE legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector), handled ggplot2. Default: \"bottom\" plot.title optional title written top plot.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial distribution of cells — plot_cells","text":"ggplot object.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_compounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot compound time curves — plot_compounds","title":"Plot compound time curves — plot_compounds","text":"Plot concentrations metabolites time","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_compounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot compound time curves — plot_compounds","text":"","code":"plot_compounds(object, compounds = NULL, tlim = NULL, ylim = NULL)"},{"path":"https://waschina.github.io/Eutropia/reference/plot_compounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot compound time curves — plot_compounds","text":"object S4-object class growthSimulation. compounds Vector compound IDs whose concentration plotted. IDs provided, top variable (SD) compounds plotted (max. 8 compounds). tlim Numeric vector length 2, specifying x-range (Time) displayed. ylim Numeric vector length 2, specifying y-range (mM) displayed.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_compounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot compound time curves — plot_compounds","text":"ggplot.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial distribution of compounds — plot_environment","title":"Plot spatial distribution of compounds — plot_environment","text":"Plots spatial distribution compound concentrations heatmap.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial distribution of compounds — plot_environment","text":"","code":"plot_environment(   object,   compounds,   compound.names = NULL,   xlim = NULL,   ylim = NULL,   iter = NULL,   scalebar.color = \"white\",   layer = 0,   gradient.limits = NULL,   gradient.option = \"viridis\",   incl.timestamp = TRUE,   legend.position = \"right\" )"},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial distribution of compounds — plot_environment","text":"object S4-object type growthSimulation. compounds Character string compound ids plot compound.names Character string compound names displayed facet header instead compound names simulation object. xlim Numeric vector length 2 specifying limits (left right) x axis; .e. horizontal dimension. ylim Numeric vector length 2 specifying limits (top bottom) y axis; .e. vertical dimension. iter Positive integer number simulation step/iteration plot distribution. Works respective metabolite concentrations prior recorded (see run_simulation). `NULL`, current distribution compound concentrations. scalebar.color Color scale bar annotation. Default: \"white\". layer Positive integer, specifying layer (z-dimension) plot. Default: 0 (base plane). gradient.limits Numeric vector length 2 specifying concentration range spanned color gradient. gradient.option Character string indicating colormap used visualizing metabolite concentrations. Please refer scale_colour_viridis_d see possible options. incl.timestamp Boolean indicating whether timestamp included plot. Default: TRUE legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector), handled ggplot2. Default: \"right\"","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial distribution of compounds — plot_environment","text":"ggplot","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment_exoenzymes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial distribution of exoenzymes — plot_environment_exoenzymes","title":"Plot spatial distribution of exoenzymes — plot_environment_exoenzymes","text":"Plots spatial distribution exoenzyme concentrations heatmap.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment_exoenzymes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial distribution of exoenzymes — plot_environment_exoenzymes","text":"","code":"plot_environment_exoenzymes(   object,   exoenzymes,   exoenzyme.names = NULL,   xlim = NULL,   ylim = NULL,   iter = NULL,   scalebar.color = \"white\",   layer = 0,   gradient.limits = NULL,   gradient.option = \"viridis\",   incl.timestamp = TRUE,   legend.position = \"right\" )"},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment_exoenzymes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial distribution of exoenzymes — plot_environment_exoenzymes","text":"object S4-object type growthSimulation exoenzymes Character string exoenzyme ids plot exoenzyme.names Character string exoenzyme names displayed facet header instead exoenzyme names simulation object. xlim Numeric vector length 2 specifying limits (left right) x axis; .e. horizontal dimension. ylim Numeric vector length 2 specifying limits (top bottom) y axis; .e. vertical dimension. iter Positive integer number simulation step/iteration plot distribution. Works respective metabolite concentrations prior recorded (see run_simulation). NULL, current distribution exoenzyme concentrations. scalebar.color Color scale bar annotation. Default: \"white\". layer Positive integer, specifying layer (z-dimension) plot. Default: 0 (base plane). gradient.limits Numeric vector length 2 specifying concentration range spanned color gradient. gradient.option Character string indicating colormap used visualizing exoenzyme concentrations. Please refer scale_colour_viridis_d see possible options. incl.timestamp Boolean indicating whether timestamp included plot. Default: TRUE legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector), handled ggplot2. Default: \"right\"","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_environment_exoenzymes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial distribution of exoenzymes — plot_environment_exoenzymes","text":"ggplot","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot growth curves — plot_growth","title":"Plot growth curves — plot_growth","text":"Plot population growth time","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot growth curves — plot_growth","text":"","code":"plot_growth(object, tlim = NULL, ylim = NULL)"},{"path":"https://waschina.github.io/Eutropia/reference/plot_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot growth curves — plot_growth","text":"object S4-object class growthSimulation. tlim Numeric vector length 2, specifying x-range (Time) displayed. ylim Numeric vector length 2, specifying y-range (Mass) displayed.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/plot_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot growth curves — plot_growth","text":"ggplot","code":""},{"path":"https://waschina.github.io/Eutropia/reference/run_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run simulation — run_simulation","title":"Run simulation — run_simulation","text":"Run agent- FBA-based simulation.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/run_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run simulation — run_simulation","text":"","code":"run_simulation(   object,   niter,   verbose = 1,   lim_cells = 1e+05,   lim_time = 300,   convergence.e = 1e-04,   record = NULL,   n.cores = NULL,   live.plot = F,   on.iteration = NULL,   ... )"},{"path":"https://waschina.github.io/Eutropia/reference/run_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run simulation — run_simulation","text":"object object class growthSimulation niter Number rounds simulate verbose Control 'chattiness' simulation logs. 0 - logs, 1 - main logs, 2 - chaffinch. lim_cells Simulation terminates total number cells exceed value. lim_time Simulation terminated first iteration finished time limit (minutes). convergence.e Numeric indicating community growth (pg) considered reached convergence record Character vector indicates, simulation variables recorded simulation iteration. See Details. n.cores Number CPUs use parallelisation. NULL (default), use number detectable cores minus 1 maximum 10 cores. live.plot Logical. TRUE, positions cells plotted iteration. Caution: May reduce performance simulation. Default: FALSE .iteration optional function performed end iteration returns object class growthSimulation. ... Additional arguments `.iteration`","code":""},{"path":"https://waschina.github.io/Eutropia/reference/run_simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run simulation — run_simulation","text":"Recording: cells' positions, masses, sizes, metabolite exchanges always recorded. Also recorded global metabolite concentrations. Due memory considerations, local metabolite concentrations recorded default. However, users can specify concentrations tracked simulation using `record` option. E.g. record = c(\"compound_cpd00029_e0\",\"compound_cpd00211_e0\") records concentration fo two metabolites `cpd00029_e0` `cpd00211_e0`. compound concentration can recorded record = \"compounds\" , yet, advised storage- time-consuming. Compound concentrations stored memory hard drive file within working directory. Tracked concentrations can also plotted plot_environment. Exoenzyme concentrations recorded current version. Convergence checked calculating ratio: $$c := | a_i / min(a_{-1},...,a_{-5}) - 1 |$$ \\(a_i\\) total biomass iteration \\(\\). simulation terminates \\(c\\) `convergence.e`. Thus, one can expect longer simulations reducing `convergence.e`.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/show-growthSimulation-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a short summary of a growth simulation — show,growthSimulation-method","title":"Print a short summary of a growth simulation — show,growthSimulation-method","text":"Displays numbers describe current status growth simulation.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/show-growthSimulation-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a short summary of a growth simulation — show,growthSimulation-method","text":"","code":"# S4 method for growthSimulation show(object)"},{"path":"https://waschina.github.io/Eutropia/reference/show-growthSimulation-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a short summary of a growth simulation — show,growthSimulation-method","text":"object S4-object type growthSimulation.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/summary_exchanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of uptake / production by organism type — summary_exchanges","title":"Summary of uptake / production by organism type — summary_exchanges","text":"Uptake/Production rates fmol summarized organism type","code":""},{"path":"https://waschina.github.io/Eutropia/reference/summary_exchanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of uptake / production by organism type — summary_exchanges","text":"","code":"summary_exchanges(object, iter = NULL)"},{"path":"https://waschina.github.io/Eutropia/reference/summary_exchanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of uptake / production by organism type — summary_exchanges","text":"object S4-object type growthSimulation. iter Positive integer number simulation step/iteration plot rates.","code":""},{"path":"https://waschina.github.io/Eutropia/reference/summary_exchanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of uptake / production by organism type — summary_exchanges","text":"data.table","code":""}]
