// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// multiply
arma::mat multiply(arma::sp_mat A, arma::mat B);
RcppExport SEXP _EcoAgents_multiply(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(multiply(A, B));
    return rcpp_result_gen;
END_RCPP
}
// trans_
arma::sp_mat trans_(arma::sp_mat X);
RcppExport SEXP _EcoAgents_trans_(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(trans_(X));
    return rcpp_result_gen;
END_RCPP
}
// trace_
int trace_(arma::sp_mat X);
RcppExport SEXP _EcoAgents_trace_(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(trace_(X));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EcoAgents_multiply", (DL_FUNC) &_EcoAgents_multiply, 2},
    {"_EcoAgents_trans_", (DL_FUNC) &_EcoAgents_trans_, 1},
    {"_EcoAgents_trace_", (DL_FUNC) &_EcoAgents_trace_, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_EcoAgents(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
